
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Web;
using Model.Services.Admin;
using Model.Services.Docente;
using Model.Services.Estudiante;
using iTextSharp.text;
using iTextSharp.text.pdf;

namespace CAS_ADMIN.Models
{
    public class PrintPDF
    {



        #region ImprimirHorarioDocente
        public byte[] ImprimirHorarioDocente(string ID_DOCENTE)
        {
            Byte[] bytes = null;
            Docente docente = new Docente();
            Periodo perido = new Periodo();
            HorarioDocente horario = new HorarioDocente();
            try
            {
                docente = docente.ObtenerDocente(ID_DOCENTE);
                perido = perido.ObtenerPeriodoActivo();
                horario = horario.ObtenerHorario(ID_DOCENTE);

                Document document = new Document(PageSize.A4, 20f, 20f, 10f, 10f);

                /*FONT*/
                Font fontNormalNormal = FontFactory.GetFont(FontFactory.HELVETICA, 8, Font.NORMAL);
                Font fontNormalCabecera = FontFactory.GetFont(FontFactory.HELVETICA, 8, Font.BOLD);

                Color TabelHeaderBackGroundColor = iTextSharp.text.html.WebColors.GetRGBColor("#EEEEEE");


                /*SEPARADOR*/
                float[] anchoColumna = { 30 };
                PdfPTable separador = new PdfPTable(1);
                separador.SetTotalWidth(anchoColumna);
                separador.DefaultCell.Border = PdfTable.NO_BORDER;
                separador.DefaultCell.FixedHeight = 10;
                separador.AddCell(new Phrase("", fontNormalNormal));

                /*CELDA VACIA*/
                PdfPCell cellVacia = new PdfPCell(new Paragraph(" ", fontNormalCabecera));
                cellVacia.Border = PdfCell.NO_BORDER;

                using (System.IO.MemoryStream memoryStream = new System.IO.MemoryStream())
                {
                    PdfWriter writer = PdfWriter.GetInstance(document, memoryStream);
                    Phrase phrase = null;
                    PdfPCell cell = null;
                    PdfPTable table = null;
                    Color color = null;

                    document.Open();

                    //Header Table
                    table = new PdfPTable(2);
                    table.TotalWidth = 500f;
                    table.LockedWidth = true;
                    table.SetWidths(new float[] { 0.3f, 0.7f });

                    //Company Logo
                    cell = ImageCell("~/assets/images/CAS-logo.png", 70f, PdfPCell.ALIGN_LEFT);
                    table.AddCell(cell);

                    ////Datos Cabecera
                    phrase = new Phrase();
                    phrase.Add(new Chunk("HORARIO DOCENTE \n\n", FontFactory.GetFont("Arial", 16, Font.BOLD, Color.BLACK)));
                    phrase.Add(new Chunk("Docente: " + docente.APELLIDO_PATERNO_DOCENTE+" "+ docente.APELLIDO_MATERNO_DOCENTE+" "+docente.PRIMER_NOMBRE_DOCENTE+" "+docente.SEGUNDO_NOMBRE_DOCENTE+ "\n\n", fontNormalCabecera));
                    phrase.Add(new Chunk("Periodo: " + perido.DESCRIPCION_PERIODO + "\n", fontNormalCabecera));
                    cell = PhraseCell(phrase, PdfPCell.ALIGN_LEFT);
                    cell.VerticalAlignment = PdfCell.ALIGN_TOP;
                    table.AddCell(cell);

                    //Separater Line
                    color = new Color(System.Drawing.ColorTranslator.FromHtml("#8b1716"));
                    DrawLine(writer, 25f, document.Top - 79f, document.PageSize.Width - 25f, document.Top - 79f, color);
                    DrawLine(writer, 25f, document.Top - 80f, document.PageSize.Width - 25f, document.Top - 80f, color);
                    document.Add(table);

                    document.Add(separador);
                    document.Add(separador);
                    document.Add(separador);
                    document.Add(separador);

                    #region Items Table
                    //Create body table
                    PdfPTable itemTable = new PdfPTable(5);

                    itemTable.HorizontalAlignment = 0;
                    itemTable.WidthPercentage = 100;
                    itemTable.SetWidths(new float[] { 5, 40, 10, 20, 25 });  // then set the column's __relative__ widths
                    itemTable.SpacingAfter = 40;
                    itemTable.DefaultCell.Border = Rectangle.BOX;
                    PdfPCell cell1 = new PdfPCell(new Phrase("NO", fontNormalCabecera));
                    cell1.BackgroundColor = TabelHeaderBackGroundColor;
                    cell1.HorizontalAlignment = Element.ALIGN_CENTER;
                    itemTable.AddCell(cell1);
                    PdfPCell cell2 = new PdfPCell(new Phrase("DESCRIPTION", fontNormalCabecera));
                    cell2.BackgroundColor = TabelHeaderBackGroundColor;
                    cell2.HorizontalAlignment = 1;
                    itemTable.AddCell(cell2);
                    PdfPCell cell3 = new PdfPCell(new Phrase("QUANTITY", fontNormalCabecera));
                    cell3.BackgroundColor = TabelHeaderBackGroundColor;
                    cell3.HorizontalAlignment = Element.ALIGN_CENTER;
                    itemTable.AddCell(cell3);
                    PdfPCell cell4 = new PdfPCell(new Phrase("UNIT AMOUNT", fontNormalCabecera));
                    cell4.BackgroundColor = TabelHeaderBackGroundColor;
                    cell4.HorizontalAlignment = Element.ALIGN_CENTER;
                    itemTable.AddCell(cell4);
                    PdfPCell cell5 = new PdfPCell(new Phrase("TOTAL", fontNormalCabecera));
                    cell5.BackgroundColor = TabelHeaderBackGroundColor;
                    cell5.HorizontalAlignment = Element.ALIGN_CENTER;
                    itemTable.AddCell(cell5);
                    //foreach (DataRow row in dt.Rows)
                    {
                        PdfPCell numberCell = new PdfPCell(new Phrase("1", fontNormalNormal));
                        numberCell.HorizontalAlignment = 1;
                        numberCell.PaddingLeft = 10f;
                        numberCell.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER;
                        itemTable.AddCell(numberCell);

                        var _phrase = new Phrase();
                        _phrase.Add(new Chunk("New Signup Subscription Plan\n", fontNormalNormal));
                        _phrase.Add(new Chunk("Subscription Plan description will add here.", fontNormalNormal));
                        PdfPCell descCell = new PdfPCell(_phrase);
                        descCell.HorizontalAlignment = 0;
                        descCell.PaddingLeft = 10f;
                        descCell.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER;
                        itemTable.AddCell(descCell);

                        PdfPCell qtyCell = new PdfPCell(new Phrase("1", fontNormalNormal));
                        qtyCell.HorizontalAlignment = 1;
                        qtyCell.PaddingLeft = 10f;
                        qtyCell.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER;
                        itemTable.AddCell(qtyCell);

                        PdfPCell amountCell = new PdfPCell(new Phrase("$100", fontNormalNormal));
                        amountCell.HorizontalAlignment = 1;
                        amountCell.PaddingLeft = 10f;
                        amountCell.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER;
                        itemTable.AddCell(amountCell);

                        PdfPCell totalamtCell = new PdfPCell(new Phrase("$100", fontNormalNormal));
                        totalamtCell.HorizontalAlignment = 1;
                        totalamtCell.Border = Rectangle.LEFT_BORDER | Rectangle.RIGHT_BORDER;
                        itemTable.AddCell(totalamtCell);

                    }
                    // Table footer
                    PdfPCell totalAmtCell1 = new PdfPCell(new Phrase(""));
                    totalAmtCell1.Border = Rectangle.LEFT_BORDER | Rectangle.TOP_BORDER;
                    itemTable.AddCell(totalAmtCell1);
                    PdfPCell totalAmtCell2 = new PdfPCell(new Phrase(""));
                    totalAmtCell2.Border = Rectangle.TOP_BORDER; //Rectangle.NO_BORDER; //Rectangle.TOP_BORDER;
                    itemTable.AddCell(totalAmtCell2);
                    PdfPCell totalAmtCell3 = new PdfPCell(new Phrase(""));
                    totalAmtCell3.Border = Rectangle.TOP_BORDER; //Rectangle.NO_BORDER; //Rectangle.TOP_BORDER;
                    itemTable.AddCell(totalAmtCell3);
                    PdfPCell totalAmtStrCell = new PdfPCell(new Phrase("Total Amount", fontNormalNormal));
                    totalAmtStrCell.Border = Rectangle.TOP_BORDER;   //Rectangle.NO_BORDER; //Rectangle.TOP_BORDER;
                    totalAmtStrCell.HorizontalAlignment = 1;
                    itemTable.AddCell(totalAmtStrCell);
                    PdfPCell totalAmtCell = new PdfPCell(new Phrase("$100", fontNormalNormal));
                    totalAmtCell.HorizontalAlignment = 1;
                    itemTable.AddCell(totalAmtCell);

                    PdfPCell cell22 = new PdfPCell(new Phrase("***NOTICE: A finance charge of 1.5% will be made on unpaid balances after 30 days. ***", fontNormalNormal));
                    cell22.Colspan = 5;
                    cell22.HorizontalAlignment = 1;
                    itemTable.AddCell(cell22);
                    document.Add(itemTable);
                    #endregion

                    //Addtional Information
                    document.Close();
                    bytes = memoryStream.ToArray();
                    memoryStream.Close();
                }
                return bytes;
            }
            catch (Exception ex)
            {
                return bytes;
            }
        }
        #endregion



        private static PdfPCell ImageCell(string path, float scale, int align)
        {
            iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath(path));
            image.ScalePercent(scale);
            PdfPCell cell = new PdfPCell(image);
            cell.BorderColor = Color.WHITE;
            cell.VerticalAlignment = PdfCell.ALIGN_TOP;
            cell.HorizontalAlignment = align;
            cell.PaddingBottom = 0f;
            cell.PaddingTop = 0f;
            return cell;
        }

        private static void DrawLine(PdfWriter writer, float x1, float y1, float x2, float y2, Color color)
        {
            PdfContentByte contentByte = writer.DirectContent;
            contentByte.SetColorStroke(color);
            contentByte.MoveTo(x1, y1);
            contentByte.LineTo(x2, y2);
            contentByte.Stroke();
        }
        private static PdfPCell PhraseCell(Phrase phrase, int align)
        {
            PdfPCell cell = new PdfPCell(phrase);
            cell.BorderColor = Color.WHITE;
            cell.VerticalAlignment = PdfCell.ALIGN_TOP;
            cell.HorizontalAlignment = align;
            cell.PaddingBottom = 2f;
            cell.PaddingTop = 0f;
            return cell;
        }

    }
}