
@model  Model.Services.Admin.NotaDocente
@{
    ViewBag.Title = "Asignacion";
}

<div class="row">
    <div class="col-sm-12">
        <h4 class="page-title">@ViewBag.Title</h4>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="m-t-25"></div>
        <button type="button" onclick="ModalForm('@Url.Action("CrearAsignacion", "Notas", new { id = string.Empty })')" cla class="btn btn-custom waves-effect waves-light m-b-5"> <i class="fa fa-plus-circle m-r-5"></i> <span>Añadir</span> </button>
        <div class="m-t-25"></div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="card-box">
            <div class="row">
                <div class="col-lg-12">
                    @using (Html.BeginForm("Asignacion", "Notas", FormMethod.Post, new { @class = "form-horizontal", id = "formHorario" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <label class="col-md-3 control-label">Periodo</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_PERIODO, new SelectList(new Model.Services.Admin.Periodo().ListPeriodo(), "ID_PERIODO", "DESCRIPCION_PERIODO"), " ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ID_PERIODO, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Sede</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_SEDE, new SelectList(new Model.Services.Admin.Sede().ObtenerSede(), "ID_SEDE", "DESCRIPCION_UNIVERSIDAD"), " ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ID_SEDE, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Carrera</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_CARRERA, new SelectList(string.Empty, "ID_CARRERA", "DESCRIPCION_CARRERA"), " ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ID_CARRERA, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Nota</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_NOTA, new SelectList(string.Empty, "ID_NOTA", "DESCRIPCION_NOTA"), " ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ID_NOTA, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Nota Detalle</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_NOTA_DETALLE, new SelectList(string.Empty, "ID_NOTA_DETALLE", "DESCRIPCION_NOTA_DETALLE"), " ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ID_NOTA_DETALLE, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label"></label>
                            <div class="col-md-9">
                                <button id="btn_buscar" type="button" class="btn btn-custom waves-effect waves-light m-b-5" data-loading-text="<span class='btn-label'><i class='fa fa-circle-o-notch fa-spin'></i></span> Espera<span class='md-ripple'></span>"><span class="btn-label"><i class="fa fa-search"></i></span> Buscar<span class="md-ripple"></span></button>
                            </div>
                        </div>
                    }
                </div><!-- end col -->
                <div class="col-sm-12">
                    <div id="myPartialViewDiv">
                        @if (Model != null)
                        {
                            Html.RenderPartial("_DetalleAsignacion", Model.NotaAsignada);
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* MODAL *@
<div class="modal fade modal-form" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">

</div>
<!-- /.modal -->

@section scripts
{
    <script>

        $('#btn_buscar').click(function () {
            $(".btn-loding").button('loading');
            model = $('#formHorario').serialize();
            $.validator.unobtrusive.parse("#formHorario");
            if ($("#formHorario").valid()) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DetalleAsignacion", "Notas")',
                    data: JSON.stringify({
                        id_periodo: $("#ID_PERIODO").val(),
                        id_sede: $('#ID_SEDE').val(),
                        id_carrera: $('#ID_CARRERA').val(),
                        id_nota: $('#ID_NOTA').val(),
                        id_notaDetalle: $('#ID_NOTA_DETALLE').val()
                    }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (response) {
                        $('#myPartialViewDiv').html(response);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            }
            setTimeout(function () {
                $(".btn-loding").button('reset');
            }, 200);
            return false;
        });



        $(document).ready(function () {


            //Dropdownlist Sede
            $("#ID_SEDE").change(function () {
                $("#ID_CARRERA").empty();
                $("#ID_NOTA").empty();
                $("#ID_NOTA_DETALLE").empty();
                $("#ID_PONDERACION").empty();
                if ($("#ID_SEDE").val() != "") {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("getCarreraSede", "Carrera")', // we are calling json method
                        dataType: 'json',
                        data: { id_sede: $("#ID_SEDE").val() },
                        success: function (states) {
                            // states contains the JSON formatted list
                            // of states passed from the controller
                            $("#ID_CARRERA").append('<option value=""></option>');
                            $.each(states, function (i, state) {
                                $("#ID_CARRERA").append('<option value="' + state.Value + '">' +
                                     state.Text + '</option>');
                                // here we are adding option for States

                            });
                        },
                        error: function (ex) {
                            alert('Failed to retrieve states.' + ex);
                        }
                    });
                }
                return false;
            })

            //Dropdownlist Carrea
            $("#ID_CARRERA").change(function () {
                $("#ID_NOTA").empty();
                $("#ID_NOTA_DETALLE").empty();
                $("#ID_PONDERACION").empty();
                if ($("#ID_CARRERA").val() != "" && $("#ID_PERIODO").val() != "") {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("getNota", "Notas")', // we are calling json method
                        dataType: 'json',
                        data: { id_carrera: $("#ID_CARRERA").val(), id_periodo: $("#ID_PERIODO").val() },
                        success: function (states) {
                            // states contains the JSON formatted list
                            // of states passed from the controller
                            $("#ID_NOTA").append('<option value=""></option>');
                            $.each(states, function (i, state) {
                                $("#ID_NOTA").append('<option value="' + state.Value + '">' +
                                     state.Text + '</option>');
                                // here we are adding option for States

                            });
                        },
                        error: function (ex) {
                            alert('Failed to retrieve states.' + ex);
                        }
                    });
                }
                return false;
            })

            //Dropdownlist Nota
            $("#ID_NOTA").change(function () {
                $("#ID_NOTA_DETALLE").empty();
                $("#ID_PONDERACION").empty();
                if ($("#ID_NOTA").val() != "") {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("getNotaDetalle", "Notas")', // we are calling json method
                        dataType: 'json',
                        data: { id_nota: $("#ID_NOTA").val() },
                        success: function (states) {
                            // states contains the JSON formatted list
                            // of states passed from the controller
                            $("#ID_NOTA_DETALLE").append('<option value=""></option>');
                            $.each(states, function (i, state) {
                                $("#ID_NOTA_DETALLE").append('<option value="' + state.Value + '">' +
                                     state.Text + '</option>');
                                // here we are adding option for States

                            });
                        },
                        error: function (ex) {
                            alert('Failed to retrieve states.' + ex);
                        }
                    });
                }
                return false;
            })



        });

        function ActualizarDetalle() {
        }

    </script>
}