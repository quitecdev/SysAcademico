@model Model.Services.Admin.NotaDocente
@{
    Layout = null;
}


<script>
    
    $(document).ready(function () {

       //Dropdownlist Sede
        $("#id_sede").change(function () {
            $("#id_carrera").empty();
            $("#id_nota").empty();
            $("#id_nota_detalle").empty();
            $("#id_ponderacion").empty();
            $("#id_docente").empty();
            if ($("#id_sede").val() != "") {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("getCarreraSede", "Carrera")', // we are calling json method
                    dataType: 'json',
                    data: { id_sede: $("#id_sede").val() },
                    success: function (states) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#id_carrera").append('<option value=""></option>');
                        $.each(states, function (i, state) {
                            $("#id_carrera").append('<option value="' + state.Value + '">' +
                                 state.Text + '</option>');
                            // here we are adding option for States

                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }
            return false;
        })

        //Dropdownlist Carrea
        $("#id_carrera").change(function () {
            $("#id_nota").empty();
            $("#id_nota_detalle").empty();
            $("#id_ponderacion").empty();
            $("#id_docente").empty();
            if ($("#id_carrera").val() != "" && $("#id_periodo").val() != "") {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("getNota", "Notas")', // we are calling json method
                    dataType: 'json',
                    data: { id_carrera: $("#id_carrera").val(), id_periodo: $("#id_periodo").val() },
                    success: function (states) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#id_nota").append('<option value=""></option>');
                        $.each(states, function (i, state) {
                            $("#id_nota").append('<option value="' + state.Value + '">' +
                                 state.Text + '</option>');
                            // here we are adding option for States

                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }
            return false;
        })

        //Dropdownlist Nota
        $("#id_nota").change(function () {
            $("#id_nota_detalle").empty();
            $("#id_ponderacion").empty();
            $("#id_docente").empty();
            if ($("#id_nota").val() != "") {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("getNotaDetalle", "Notas")', // we are calling json method
                    dataType: 'json',
                    data: { id_nota: $("#id_nota").val() },
                    success: function (states) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#id_nota_detalle").append('<option value=""></option>');
                        $.each(states, function (i, state) {
                            $("#id_nota_detalle").append('<option value="' + state.Value + '">' +
                                 state.Text + '</option>');
                            // here we are adding option for States

                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }
            return false;
        })

        //Dropdownlist Nota
        $("#id_nota_detalle").change(function () {
            $("#id_ponderacion").empty();
            $("#id_docente").empty();
            if ($("#id_nota_detalle").val() != "") {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("getNotaPonderacion", "Notas")', // we are calling json method
                    dataType: 'json',
                    data: { id_notaDetalle: $("#id_nota_detalle").val(), id_sede: $("#id_sede").val() },
                    success: function (states) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#id_ponderacion").append('<option value=""></option>');
                        $.each(states, function (i, state) {
                            $("#id_ponderacion").append('<option value="' + state.Value + '">' +
                                 state.Text + '</option>');
                            // here we are adding option for States

                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }
            return false;
        })


        //Dropdownlist Nota
        $("#id_ponderacion").change(function () {
            $("#id_docente").empty();
            if ($("#id_ponderacion").val() != "") {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("getDocentes", "Docente")', // we are calling json method
                    dataType: 'json',
                    data: { },
                    success: function (states) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#id_docente").append('<option value=""></option>');
                        $.each(states, function (i, state) {
                            $("#id_docente").append('<option value="' + state.Value + '">' +
                                 state.Text + '</option>');
                            // here we are adding option for States

                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }
            return false;
        })

    });
</script>

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h4 class="modal-title">Crear Asignación</h4>
        </div>
        <div class="modal-body">
            <div class="row">
                <div class="col-lg-12">
                    @using (Html.BeginForm("CrearAsignacion", "Notas", FormMethod.Post, new { onsubmit = "return SubmitForm(this,'" + @Url.Action("CrearAsignacion", "Notas", new { id = string.Empty }) + "')", @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <label class="col-md-3 control-label">Periodo</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_PERIODO, new SelectList(new Model.Services.Admin.Periodo().ListPeriodo(), "ID_PERIODO", "DESCRIPCION_PERIODO"), " ", new { @class = "form-control", id = "id_periodo" })
                                @Html.ValidationMessageFor(model => model.ID_PERIODO, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Sede</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_SEDE, new SelectList(new Model.Services.Admin.Sede().ObtenerSede(), "ID_SEDE", "DESCRIPCION_UNIVERSIDAD"), " ", new { @class = "form-control", id = "id_sede" })
                                @Html.ValidationMessageFor(model => model.ID_SEDE, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Carrera</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_CARRERA, new SelectList(string.Empty, "ID_CARRERA", "DESCRIPCION_CARRERA"), " ", new { @class = "form-control", id = "id_carrera" })
                                @Html.ValidationMessageFor(model => model.ID_CARRERA, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Nota</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_NOTA, new SelectList(string.Empty, "ID_NOTA", "DESCRIPCION_NOTA"), " ", new { @class = "form-control", id = "id_nota" })
                                @Html.ValidationMessageFor(model => model.ID_NOTA, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Nota Detalle</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_NOTA_DETALLE, new SelectList(string.Empty, "ID_NOTA_DETALLE", "DESCRIPCION_NOTA_DETALLE"), " ", new { @class = "form-control", id = "id_nota_detalle" })
                                @Html.ValidationMessageFor(model => model.ID_NOTA_DETALLE, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Nota Ponderación</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_PONDERACION, new SelectList(string.Empty, "ID_PONDERACION", "DESCRIPCION_PONDERACION"), " ", new { @class = "form-control", id = "id_ponderacion" })
                                @Html.ValidationMessageFor(model => model.ID_PONDERACION, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Docente</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_DOCENTE, new SelectList(string.Empty, "ID_DOCENTE", "NOMBRE"), " ", new { @class = "form-control", id = "id_docente" })
                                @Html.ValidationMessageFor(model => model.ID_DOCENTE, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label"></label>
                            <div class="col-md-9">
                                <button type="submit" class="btn btn-custom waves-effect waves-light m-b-5 btn-loding" data-loading-text="<span class='btn-label'><i class='fa fa-circle-o-notch fa-spin'></i></span> Guardar<span class='md-ripple'></span>"><span class="btn-label"><i class="fa fa-save"></i></span> Guardar<span class="md-ripple"></span></button>
                            </div>
                        </div>
                    }
                </div><!-- end col -->
            </div>
        </div>
    </div>
</div>
