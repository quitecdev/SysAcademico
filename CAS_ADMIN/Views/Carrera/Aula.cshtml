@model Model.Services.Admin.Aulas
@{
    Layout = null;
}


<script>
    $(document).ready(function () {

        ActualizarDetalle();

        $("#ID_CARRERA").change(function () {
            if ($("#ID_CARRERA").val() != "" && $("#ID_SEDE").val() != "") {
                $("#ID_MATERIA").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("getMateriaCarrera", "Carrera")', // we are calling json method
                    dataType: 'json',
                    data: { id_carrera: $("#ID_CARRERA").val() },
                    success: function (states) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#ID_MATERIA").append('<option value=""></option>');
                        $.each(states, function (i, state) {
                            $("#ID_MATERIA").append('<option value="' + state.Value + '">' +
                                 state.Text + '</option>');
                            // here we are adding option for States

                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }
            return false;
        })

        $("#ID_MATERIA").change(function () {
            ActualizarDetalle();
            if ($("#ID_MATERIA").val() != "" && $("#ID_SEDE").val() != "") {
                $("#ID_PARALELO").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("getParaleloSedeMateria", "Paralelo")', // we are calling json method
                    dataType: 'json',
                    //data: "{'id_sede':'" + $("#ID_SEDE").val() + "', 'id_materia':'" + $("#ID_MATERIA").val() + "'}",
                    data: { id_sede: parseInt($("#ID_SEDE").val()), id_materia: parseInt($("#ID_MATERIA").val()) },
                    success: function (states) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#ID_PARALELO").append('<option value=""></option>');
                        $.each(states, function (i, state) {
                            $("#ID_PARALELO").append('<option value="' + state.Value + '">' +
                                 state.Text + '</option>');
                            // here we are adding option for States

                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }
            return false;
        })
    });


    function ActualizarDetalle() {
        if ($("#ID_MATERIA").val() != "" && $("#ID_SEDE").val() != "") {
            $.ajax({
                type: "POST",
                url: '@Url.Action("DetalleAula", "Carrera")',
                data: JSON.stringify({ ID_MATERIA: $("#ID_MATERIA").val(), ID_SEDE: $("#ID_SEDE").val() }),
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (response) {
                    $('#myPartialViewDiv').html(response);
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
        else {
            $.ajax({
                type: "POST",
                url: '@Url.Action("DetalleAula", "Carrera")',
                data: JSON.stringify({ ID_MATERIA: 0 ,ID_SEDE:0}),
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (response) {
                    $('#myPartialViewDiv').html(response);
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }

    }

</script>

<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            <h4 class="modal-title">Aulas</h4>
        </div>
        <div class="modal-body">
            <div class="row">
                <div class="col-lg-12">
                    @using (Html.BeginForm("Aula", "Carrera", FormMethod.Post, new { onsubmit = "return SubmitForm(this,'" + @Url.Action("CrearCarrea", "Carrera", new { id = string.Empty }) + "')", @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()
                        @*@Html.HiddenFor(model => model.ID_CARRERA)*@

                        <div class="form-group">
                            <label class="col-md-3 control-label">Sede</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_SEDE, new SelectList(new Model.Services.Admin.Sede().ObtenerSede(), "ID_SEDE", "DESCRIPCION_UNIVERSIDAD"), " ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ID_SEDE, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Carrera</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_CARRERA, new SelectList(new Model.Services.Admin.Carrera().ObtenerCarrera(), "ID_CARRERA", "DESCRIPCION_CARRERA"), " ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ID_CARRERA, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Materia</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_MATERIA, new SelectList(string.Empty, "ID_CARRERA", "DESCRIPCION_CARRERA"), " ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ID_MATERIA, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Paralelo</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.ID_PARALELO, new SelectList(string.Empty, "ID_PARALELO", "DESCRIPCION_PARALELO"), " ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ID_PARALELO, "", new { @class = "text-custom" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label"></label>
                            <div class="col-md-9">
                                <button type="submit" class="btn btn-custom waves-effect waves-light m-b-5 btn-loding" data-loading-text="<span class='btn-label'><i class='fa fa-circle-o-notch fa-spin'></i></span> Guardar<span class='md-ripple'></span>"><span class="btn-label"><i class="fa fa-save"></i></span> Guardar<span class="md-ripple"></span></button>
                            </div>
                        </div>
                    }
                </div>
                <div class="col-lg-12">
                    <div id="myPartialViewDiv">

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
